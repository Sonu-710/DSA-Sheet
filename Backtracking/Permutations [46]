//Time Complexity : O(N!)
//Space Complexity : O(N)

class Solution {
    public List<List<Integer>> permute(int[] nums) {
        ArrayList<Integer> arr=new ArrayList<>();
        for(int i=0;i<nums.length;i++)
        arr.add(nums[i]);
        List<List<Integer>> list=new ArrayList<>();
        generate(0,arr,list);
        return list;
    }
    static void generate(int index,List<Integer> arr,List<List<Integer>> list)
    {
        if(index==arr.size())
        {
            list.add(new ArrayList<Integer>(arr));
            return;
        }
        for(int i=index;i<arr.size();i++)
        {
            Collections.swap(arr,index,i);
            generate(index+1,arr,list);
            Collections.swap(arr,index,i);
        }
    }
}
